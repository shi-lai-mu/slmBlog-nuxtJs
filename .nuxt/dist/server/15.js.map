{"version":3,"file":"15.js","sources":["webpack:///./components/music/Search.vue","webpack:///./components/music/Search.vue?9354","webpack:///./components/music/Search.vue?28a0","webpack:///./components/music/Search.vue?5847","webpack:///./components/music/Search.vue?79b6","webpack:///./components/music/Search.vue?fc35"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { utfc } from '~/plugins/tool'\r\n\r\nexport default {\r\n  props: ['Music'],\r\n  data () {\r\n    return {\r\n      searchs: null,\r\n      songList: [],\r\n      state: !1,\r\n      searchList: !1,\r\n      // 下载品质列表\r\n      downList: [],\r\n      // 搜索历史\r\n      searchHistory: [],\r\n      // 页数\r\n      page: {\r\n        num: 1,\r\n        max: 1\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    // 读取搜索历史\r\n    let history = localStorage.getItem('searchHistory')\r\n    if (history) {\r\n      this.searchHistory = JSON.parse(localStorage.getItem('searchHistory'))\r\n    }\r\n  },\r\n  methods: {\r\n    /* 搜索音乐 */\r\n    searchMusic (page) {\r\n      // 如果为翻页\r\n      if (typeof page === 'number') {\r\n        this.page.num += page\r\n        this.songList = []\r\n      }\r\n      // 开始搜索\r\n      this.state = '搜索中...'\r\n      let search = this.searchs\r\n      if (search) {\r\n        // 加入历史搜索\r\n        this.history(search)\r\n        this.$axios\r\n          .get('api/Music', {\r\n            data: {\r\n              fun: 'search',\r\n              key: search,\r\n              page: this.page.num\r\n            }\r\n          })\r\n          .then(res => {\r\n            this.state = false\r\n            let song = res.data.song.list\r\n            this.$el.scrollTo(0, 0)\r\n            for (let i = 0, l = song.length; i < l; i++) {\r\n              let val = song[i]\r\n              // 避免重复计算\r\n              if (val.songnames) break\r\n              if (val.songname === val.albumname) {\r\n                val.albumname = ''\r\n              }\r\n              // 歌手\r\n              let singer = ''\r\n              for (let j = 0, l = val.singer.length; j < l; j++) {\r\n                singer += val.singer[j].name + '/'\r\n              }\r\n              val.singers = singer.substring(0, singer.length - 2)\r\n              // 品质\r\n              let quality = {\r\n                sizeflac: 'SQ',\r\n                size320: 'HQ'\r\n              }\r\n              for (let v in quality) {\r\n                if (val[v] > 0) {\r\n                  val.songnames = val.songname + `<sup class=\"${quality[v]}\">${quality[v]}</sup>`\r\n                  // break\r\n                }\r\n              }\r\n              // 播放时间\r\n              val.interval = utfc(val.interval)\r\n              if (val.interval === '00:00') val.interval = '-- : --'\r\n              !val.songnames && (val.songnames = val.songname)\r\n            }\r\n            // console.log(song);\r\n            this.songList = song\r\n\r\n            // 页数计算\r\n            let page = res.data.song\r\n            this.page = {\r\n              num: page.curpage,\r\n              max: Math.ceil(page.totalnum / 20)\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.state = '搜索超时!请稍后再试...'\r\n            setTimeout(() => {\r\n              this.state = !1\r\n            }, 1000)\r\n          })\r\n      }\r\n    },\r\n\r\n    /* 显示列表 */\r\n    toggleList (e) {\r\n      this.searchList = !this.searchList\r\n      let i = e.target.dataset.i\r\n      if (this.searchList && i) {\r\n        e.stopPropagation()\r\n        let song = this.songList[i]\r\n        // 判断音乐品质\r\n        let quality = {\r\n          'songid': ['流畅', '192AAC', i],\r\n          'size128': ['标准', '128MP3', i],\r\n          'size320': ['高品质', '320MP3', i],\r\n          'sizeape': ['无损APE', 'APE', i],\r\n          'sizeflac': ['无损FLAC', 'FLAC', i]\r\n        }\r\n        let arr = []\r\n        for (let v in quality) {\r\n          if (song[v] > 0) {\r\n            arr.push(quality[v])\r\n          }\r\n        }\r\n        this.downList = arr\r\n      }\r\n    },\r\n\r\n    /* 下载音乐 */\r\n    download (e) {\r\n      let $el = e.target\r\n      let dataset = $el.dataset\r\n      let oldTXT = $el.innerHTML\r\n      // 判断是否正在下载\r\n      if ($el.innerHTML.indexOf('[') > -1) return\r\n      $el.innerHTML = `${oldTXT} [破解权限中...]`\r\n      let song = this.songList[dataset.i]\r\n      let a = document.createElement('a')\r\n      // 兼容检测\r\n      if (!('download' in a)) {\r\n        alert('抱歉您的浏览器不支持最新的属性,请尝试选择谷歌浏览器最新版!')\r\n        return\r\n      }\r\n      this.$axios\r\n        .get(`api/Music?fun=download&code=${song.songmid}&type=${dataset.qu}`)\r\n        .then(res => {\r\n          console.info('祝贺你喜提彩蛋~!')\r\n          console.table([\r\n            {\r\n              '歌名': song.songname,\r\n              '歌手': song.singers,\r\n              '时长': song.interval\r\n            }\r\n          ])\r\n          console.log(`%c${song.songname} 极速版下载链接：${res.url}`,\"color:red\")\r\n\r\n          let url = res.url\r\n          let xhr = new XMLHttpRequest()\r\n          xhr.responseType = 'blob'\r\n          xhr.onloadstart = function (e) {\r\n            $el.innerHTML = `${oldTXT} [即将开始下载]`\r\n          }\r\n          xhr.onprogress = function (e) {\r\n            let percent = (e.loaded / e.total * 100).toFixed(2)\r\n            $el.innerHTML = `${oldTXT} [${percent}%][控制台有极速版]`\r\n          }\r\n          xhr.onload = function (e) {\r\n            var blob = new Blob([this.response])\r\n            a.href = URL.createObjectURL(blob)\r\n            let singers = song.singers.replace('/', '-')\r\n            a.download = `${song.songname}(${singers}).${res.suffix}`\r\n            document.body.appendChild(a)\r\n            a.click()\r\n            $el.innerHTML = `${oldTXT} <span class=\"sup HQ\">完成</span>`\r\n            setTimeout(() => {\r\n              $el.innerHTML = oldTXT\r\n            }, 1500)\r\n          }\r\n          xhr.onerror = function (e) {\r\n            $el.innerHTML = `${oldTXT} [下载出错]`\r\n          }\r\n          url = url.replace('http://streamoc.music.tc.qq.com/', 'https://slmblog.com/download/music/')\r\n          xhr.open('get', url, true)\r\n          xhr.send()\r\n        })\r\n        .catch(() => {\r\n          $el.innerHTML = `${oldTXT} [破解失败!]`\r\n        })\r\n    },\r\n\r\n    /* 搜索音乐 */\r\n    searchChange (e) {\r\n      // 清空列表\r\n      if (!e.data && this.songList) this.songList = []\r\n    },\r\n\r\n    /* 添加/刪除 一条记录/全部记录 */\r\n    history (v) {\r\n      let history = this.searchHistory\r\n      if (typeof v === 'string') {\r\n        if (history.indexOf(v) === -1) history.push(v)\r\n      } else {\r\n        let i = v.target.dataset.i\r\n        if (i) {\r\n          v.stopPropagation()\r\n          history.splice(i, 1)\r\n        } else {\r\n          this.searchHistory = []\r\n        }\r\n      }\r\n      localStorage.setItem('searchHistory', JSON.stringify(history))\r\n    },\r\n\r\n    /* 点击历史记录 */\r\n    loadKey (e) {\r\n      this.searchs = e.target.innerText\r\n      this.searchMusic()\r\n    },\r\n\r\n    /* 播放音乐 */\r\n    playSong (e) {\r\n      let i = e.target.dataset.i || e.target.parentElement.dataset.i\r\n      if (i) {\r\n        let song = this.songList[i]\r\n        song.autoPlay = !0\r\n        this.observer.emit('music', song)\r\n      }\r\n    }\r\n  }\r\n}\r\n","// Exports\nmodule.exports = {};\n","import mod from \"-!../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--5-oneOf-1-0!../../node_modules/_vue-loader@15.9.3@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--5-oneOf-1-1!../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-oneOf-1-2!../../node_modules/_vue-loader@15.9.3@vue-loader/lib/index.js??vue-loader-options!./Search.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--5-oneOf-1-0!../../node_modules/_vue-loader@15.9.3@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--5-oneOf-1-1!../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-oneOf-1-2!../../node_modules/_vue-loader@15.9.3@vue-loader/lib/index.js??vue-loader-options!./Search.vue?vue&type=style&index=0&lang=less&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"music-search\"},[_vm._ssrNode(\"<input type=\\\"text\\\" placeholder=\\\"搜索 歌名/歌手\\\"\"+(_vm._ssrAttr(\"value\",(_vm.searchs)))+\" class=\\\"search\\\"> <ul class=\\\"song-list\\\">\"+(_vm._ssrList((_vm.songList),function(song,i){return (\"<li\"+(_vm._ssrAttr(\"data-i\",i))+\" class=\\\"clearfix\\\"><span class=\\\"song-name\\\">\"+(_vm._s(song.songnames))+\"</span> <span class=\\\"song-singer\\\">\"+_vm._ssrEscape(_vm._s(song.singers))+\"</span> <span class=\\\"song-lyric\\\">\"+_vm._ssrEscape(_vm._s(song.albumname))+\"</span> <i\"+(_vm._ssrAttr(\"data-i\",i))+\" class=\\\"iconfont icon-caidan\\\"></i> <span class=\\\"song-inter\\\">\"+_vm._ssrEscape(_vm._s(song.interval))+\"</span></li>\")}))+\"</ul> \"+((_vm.songList.length || _vm.page.num > 1)?(\"<div class=\\\"song-page\\\"><span\"+(_vm._ssrClass(null,['button-lv0', { 'not-but': _vm.page.num < 2 }]))+\">上一页</span> <span>\"+_vm._ssrEscape(_vm._s(_vm.page.num)+\"/\"+_vm._s(_vm.page.max))+\"</span> <span\"+(_vm._ssrClass(null,['button-lv0', { 'not-but': _vm.page.num >= _vm.page.max }]))+\">下一页</span></div>\"):\"<!---->\")+\" \"+((!_vm.searchs && _vm.searchHistory.length)?(\"<div class=\\\"searchHistory song-list\\\"><span class=\\\"history-tag\\\">搜索历史</span> <ul class=\\\"history-list\\\">\"+(_vm._ssrList((_vm.searchHistory),function(item,index){return (\"<li>\"+_vm._ssrEscape(\"\\n        \"+_vm._s(item))+\"<i\"+(_vm._ssrAttr(\"data-i\",index))+\" class=\\\"iconfont icon-wrong\\\"></i></li>\")}))+\"</ul> \"+((!_vm.searchs && _vm.searchHistory.length)?(\"<span class=\\\"button-lv0 clearHistory\\\">清空历史</span>\"):\"<!---->\")+\"</div>\"):\"<!---->\")+\" \"+((_vm.state)?(\"<div class=\\\"search-state\\\"><span class=\\\"state\\\">搜索中...</span></div>\"):\"<!---->\")+\" <div\"+(_vm._ssrClass(null,['search-menu-hide', {'search-menu': _vm.searchList}]))+\"><ul><li>查看信息</li> <li>收藏歌曲</li> <li>加入下载</li> <li>\\n        下载音乐:\\n        \"+(_vm._ssrList((_vm.downList),function(v,k){return (\"<span\"+(_vm._ssrAttr(\"data-qu\",v[1]))+(_vm._ssrAttr(\"data-i\",v[2]))+\" class=\\\"download-list\\\">\"+(_vm._s(v[0]))+\"</span>\")}))+\"</li> <li class=\\\"close\\\">关闭</li></ul></div>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js??ref--2-0!../../node_modules/_vue-loader@15.9.3@vue-loader/lib/index.js??vue-loader-options!./Search.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js??ref--2-0!../../node_modules/_vue-loader@15.9.3@vue-loader/lib/index.js??vue-loader-options!./Search.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Search.vue?vue&type=template&id=4c8fb086&\"\nimport script from \"./Search.vue?vue&type=script&lang=js&\"\nexport * from \"./Search.vue?vue&type=script&lang=js&\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./Search.vue?vue&type=style&index=0&lang=less&\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.3@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  \"755a58fd\"\n  \n)\n\nexport default component.exports"],"mappings":";;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAVA;AAeA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAQA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAvMA;AA1BA;;;;;;;;ACzDA;AACA;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA;AACA;AACA;;;;;;;;ACFA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}